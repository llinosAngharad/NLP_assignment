<0.14.2.95.11.08.25.mp3r+@j.gp.cs.cmu.edu (margaret profeta).0>
type:     cmu.cs.scs
topic:    pop seminar
dates:    17-feb-95
time:     <stime>3:30 pm</stime> - <etime>5:00 pm</etime>
postedby: mp3r+ on 14-feb-95 at 11:08 from j.gp.cs.cmu.edu (margaret profeta)
abstract: 
                      context dependent optimizations

                              morten welinder
                             diku, copenhagen

                         friday, february 17, 1995

                    <location>weh 8220</location>      <stime>3:30 p.m.</stime> - <etime>5:00 p.m.</etime>
     one  price  paid  for  using  a  typed  language  for  writing an
     interpreter is that it will typically have to encode  the  values
     of  the  interpreted  program explicitly into one universal type,
     val.

     <sentence>since val will be visible from the type of the interpreter (e.g.,
     prg  x  val  ->  val  for a simple one) programs derived from the
     interpreter by using, i.e., partial evaluation will  inherit  the
     universal  type  and perform repeated projections and injections.</sentence>
     <sentence>that is certainly not what we want.</sentence>

     <sentence>however, a study of a typical derived program shows  that  it  is
     not  possible  to improve much without further information.</sentence>  <sentence>this
     is where the context of the program comes in.</sentence>  <sentence>a  "context"  here
     is  a  description  of  the  input  --  in  the form of a grammer
     defining a subset of all possible val values  --  and  a  similar
     description of the output.</sentence>

     <sentence>in  words,  the  context makes certain promises about the form of
     the input and the output.</sentence>  <sentence>in the case of residual programs  from
     partial evaluation it is trivial to create good contexts.</sentence>

     <sentence>from  the  context it is possible to identify operations that are
     not needed.</sentence>  <sentence>this can result in drastic  improvements,  at  least
     with pen-and-paper examples.</sentence>

      <sentence>note:   we welcome morten to our department.</sentence>  <sentence>he will be visiting
      with peter lee for six months.</sentence>